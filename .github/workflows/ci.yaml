name: CI

on: [push, pull_request]

jobs:
  build-test:
    runs-on: ubuntu-latest
    
    # ----------------------------------------------------
    # SET ENV VARS FOR THE ENTIRE JOB HERE
    env:
      SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
      FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
      IEX_CLOUD_API_KEY: ${{ secrets.IEX_CLOUD_API_KEY }}
    # ----------------------------------------------------

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Build images
        run: docker compose -f infra/docker/docker-compose.yaml build
      - name: Install dependencies
        run: |
          pip install pytest httpx
          pip install -r services/api/requirements.txt
          pip install -r services/worker/requirements.txt
      - name: Run unit tests
        run: python -m pytest tests/
      - name: Run services for end-to-end test
        run: docker compose -f infra/docker/docker-compose.yaml up --build -d

      - name: Wait for services to be healthy
        run: |
          echo "Waiting for database to be ready..."
          sleep 30
          echo "Checking database connection..."
          docker compose -f infra/docker/docker-compose.yaml exec -T db pg_isready -U postgres || echo "Database not ready yet, waiting more..."
          sleep 10

      - name: ✅ Get evidence for Done Check 1
        run: |
          echo "--- Testing API endpoint with notification ---"
          curl -X POST http://localhost:8000/screen -H "Content-Type: application/json" -d '{"tickers": ["AAPL", "TSLA"], "strategy": "covered_call", "email": "test@example.com"}'
          echo "" # new line

      - name: ✅ Get evidence for Done Check 2
        run: |
          echo "--- Checking Worker logs ---"
          docker compose -f infra/docker/docker-compose.yaml logs worker
          echo ""
          echo "--- Looking for screener results in worker logs ---"
          docker compose -f infra/docker/docker-compose.yaml logs worker | grep -E "(Screener found|Saved.*results)" || echo "No screener results found yet (this is OK if no data exists)"

      - name: ✅ Check Notifier logs
        run: |
          echo "--- Checking Notifier logs ---"
          docker compose -f infra/docker/docker-compose.yaml logs notifier
          
      - name: ✅ Test Results API Endpoint
        run: |
          echo "--- Testing Results API Endpoint ---"
          curl -X GET http://localhost:8000/results/find_cheap_weeklies
          echo "" # new line
          
      - name: Run data-ingest tests
        run: |
          cd services/data_ingest
          pip install -r requirements.txt
          pytest -q 